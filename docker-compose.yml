version: "3.9"

x-app:
  &app
  build:
    dockerfile: ./Dockerfile
    context: .
    args:
      - DOCKER_USER_ID=${DOCKER_USER_ID:-5001}
  depends_on:
    - postgres
  env_file: ./.env

services:
  app:
    <<: *app
    container_name: fastapi_cmenu_d
    volumes:
      - ./:/app
    hostname: app
    command: bash -c "alembic upgrade head && uvicorn --host 0.0.0.0 --port 80 --reload app.main:app"
    # command: bash -c "uvicorn --host 0.0.0.0 --port 80 --reload app.main:app"
    ports:
      - '8000:80'
  

  pytest:
    <<: *app
    container_name: pytest_container
    command: bash -c "alembic upgrade head && pytest"
    volumes:
      - ./:/app


  postgres:
    image: postgres:15.1-alpine
    hostname: postgres_cmenu_d
    container_name: postgres_cmenu_d
    env_file: ./.env
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
  

  redis:
    image: redis:7
    container_name: redis_cmenu_d
    command: --port 6378
    ports:
      - '6378:6378'


  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    ports:
      - '5672:5672'
      - '15672:15672'

  celery_worker:
    container_name: celery_worker_d
    build:
      dockerfile: ./Dockerfile
      context: ./
    command: celery -A app.celery worker --pool=prefork --concurrency=8 --loglevel=info
    volumes:
      - ./:/app/
    env_file:
      - .env
    depends_on:
      - rabbitmq

  celery_beat:
    container_name: celery_beat_d
    build:
      dockerfile: ./Dockerfile
      context: ./
    command: celery -A app.celery beat
    volumes:
      - ./:/app/
    env_file:
      - .env
    depends_on:
      - rabbitmq

volumes:
  db-data: